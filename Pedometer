#include <SPI.h>
#include <SD.h>

const int chipSelect = 10;   //for SD card
const int numReadings = 20;  //the size for taking average of analog reading. This would be used for smoothing the curve

int readingsx[numReadings];      // the readings from the analog input x
int readingsy[numReadings]; // the readings from the analog input y
int readingsz[numReadings];// the readings from the analog input z

int index = 0;                  // the index of the current reading

int totalx = 0;                  // the running total of the acceleration reading
int totaly = 0;                  // the running total of the acceleration reading                   
int totalz = 0;                   // the running total of the acceleration reading

int averagex = 0;                // the average of acceleration reading
int averagey = 0;  
int averagez = 0; 

//int past,present; these variables store the value of accelerometer of Y+Z axis. The difference of these values gives the slope of graph
byte threshhold; //the  threshhold flag; if the value goes below it the counter increments by 2
int steps,th;       //steps is the steps counter, and th is the dynamic threshhold value which is dependent on the value of Y+Z acceleration
int sip;         // variable for reading the tilt sensor digital input. Sip is the counter for number of sips/eating
int sipflag=0;         //the flag for sip counter
unsigned long dynamicsum=0; //sum of 20 past value of Y+Z
int low = 1023;        // minimum y+z value
int high = 0;           // maximum y+z value
int k=0,j=0;

void setup()
{
String dataString="";
  Serial.begin(9600);

  Serial.print("Initializing SD card...");
  // make sure that the default chip select pin is set to
  // output, even if you don't use it:

  // see if the card is present and can be initialized:
  if (!SD.begin(chipSelect)) {
    Serial.println("Card failed, or not present");
    // don't do anything more:
    return;
  }
  Serial.println("card initialized.");
  // initialize all the readings to 0: 
   for (int thisReading = 0; thisReading < numReadings; thisReading++)
     {
       readingsx[thisReading] = 0; 
       readingsy[thisReading] = 0; 
       readingsz[thisReading] = 0; 
       
     }

  // Open serial communications and wait for port to open:
 //Serial.begin(9600);
  pinMode(12, OUTPUT);

  // see if the card is present and can be initialized:
  if (!SD.begin(chipSelect))
    return;

pinMode(11, INPUT);   //for tilt sensor
  pinMode(12, INPUT); //for tilt sensor
}

void loop()
{
  int x,y,z; 

  // make a string for assembling the data to log:
  String dataString = "";


      x = analogRead(6);
      y = analogRead(7);
      z = analogRead(8);
        
     totalx= totalx - readingsx[index]; //subtract the old value from array
     totaly= totaly - readingsy[index];
     totalz= totalz - readingsz[index];
     
     
      readingsx[index] = x;  //store the recent value in array
      readingsy[index] = y;
      readingsz[index] = z;
      
   // add the reading to the total:
   totalx= totalx + readingsx[index];  //add the new value to the array
   totaly= totaly + readingsy[index];         
   totalz= totalz + readingsz[index]; 
   // advance to the next position in the array:  
   index++;                    

   // if we're at the end of the array...
   if (index >= numReadings)              
     // ...wrap around to the beginning: 
     index = 0;                           

   // calculate the average:
   averagex = totalx / numReadings;
   averagez = totalz / numReadings;
 averagey = totaly / numReadings;    


dynamicsum=dynamicsum+averagey+averagez; //we are taking the sum of Y+Z as it represents the steps more accurately 
j++;
if(j==100) //the dynamic sum is calculated after every 100 value
{
  th=dynamicsum/100;
  j=0;
  dynamicsum=0;
}
  
if((averagey+averagez)<th && millis()>1000 && averagey> averagex && !threshhold) 
//conditions to count step. 1. if average Y+Z is less then threshhold 
//2. if the device has been switched on for more than1 second
//3. average y> averagex - this avoids false positive of counting steps. If a person is sitting and moves his hand vigrously, then it would not count it as step
//4. the threshhold flag in 0

    {
      threshhold=1;   //if the readings fall before this threshhold then set the flag to 1
      steps+=2; //as the slope starts moving in positive direction, increment the steps counter by 2
    
}
if((averagey+averagez)>th)//reset the threshhold flag
threshhold=0;

if(digitalRead(11) && digitalRead(12) && !sipflag)  //check the input from tilt sensor, if both the inputs are high and sipflag is low then increment the sip counter
  {
    sip++;
    sipflag=1;
  }
if (!digitalRead(11) || !digitalRead(12)) //if any of the input from the tilt sensor are low then make sipflag to 0
sipflag=0;

// the following is written on the SD card

      dataString += String(averagex);    
      dataString += ",";
      dataString += String(averagey);    
      dataString += ",";
      dataString += String(averagez);    
      dataString += ",";
      dataString += String(averagey+averagez);    
      dataString += ",";
      dataString += String(th);
      dataString += ",";
      dataString += String(steps); 
      dataString += ",";
      dataString += String(sip);
  
  

  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  File dataFile = SD.open("datalog.txt", FILE_WRITE);

  // if the file is available, write to it:
  if (dataFile) 
  {
    dataFile.println(dataString);
    dataFile.close();
    Serial.println(dataString);
    // print to the serial port too:
    
  }
  // if the file isn't open, pop up an error:
  else 
  {
     Serial.println("error opening datalog.txt");
     return;
  }
}








